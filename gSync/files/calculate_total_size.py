#
#  calculate_total_size.py
#  gSync
#
#  Created by 0000 on 13.03.2025.
#

import sys
import os

# Модуль для вычисления общего размера файлов по заданным путям.
# - Логика модуля: Этот Python-скрипт принимает пути к файлам через аргументы командной строки и возвращает их общий размер в байтах. Используется `GoogleDriveService` для подсчёта размера перед загрузкой. Пропускает первый аргумент (`serviceAccountPath`), так как он не является путём к файлу.
# - Роль в архитектуре: Вспомогательный скрипт, интегрированный через `GoogleDriveService.calculateTotalFileSize`, чтобы избежать дублирования логики в Swift. Подсчёт размера происходит на стороне Python, что упрощает работу с файлами в кроссплатформенной среде.
# - Особенности: Простой и независимый модуль, но отсутствие обработки ошибок (например, если файл не существует) делает его уязвимым. Выводит результат напрямую через `print`, что требует парсинга в Swift.
# - Потенциальные улучшения: Добавить обработку исключений (например, `FileNotFoundError`) и возвращать результат в JSON-формате для более надёжной интеграции с Swift.

def calculate_total_size(file_paths):
    # Вычисляет общий размер файлов в байтах по списку путей.
    # - Parameter file_paths: Список строковых путей к файлам.
    # - Returns: Суммарный размер всех файлов в байтах.
    total_size = 0
    for path in file_paths:
        total_size += os.path.getsize(path)  # Получение размера файла и добавление к общей сумме
    return total_size

if __name__ == "__main__":
    # Точка входа для запуска скрипта из командной строки.
    # - Обрабатывает аргументы, пропуская первый (serviceAccountPath), и выводит результат.
    paths = sys.argv[1:]  # Первый аргумент — serviceAccountPath, остальные — пути
    print(calculate_total_size(paths[1:]))  # Пропускаем serviceAccountPath и выводим результат
